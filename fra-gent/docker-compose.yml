version: '3.8'

services:
  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - backend_data:/app/data
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=fragent
      - POSTGRES_PORT=5432
      - DEBUG=true
      - CORS_ORIGINS=http://localhost:3000
    depends_on:
      - db
    networks:
      - fragent-network
    restart: unless-stopped

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - fragent-network
    restart: unless-stopped

  # Database service
  db:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=fragent
    networks:
      - fragent-network
    restart: unless-stopped

  # Vector database for embeddings
  pgvector:
    image: ankane/pgvector:latest
    ports:
      - "5433:5432"
    volumes:
      - pgvector_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=fragent_vector
    networks:
      - fragent-network
    restart: unless-stopped

networks:
  fragent-network:
    driver: bridge

volumes:
  postgres_data:
  pgvector_data:
  backend_data:
